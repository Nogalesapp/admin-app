{"version":3,"sources":["commons/device.js","components/Login.js","App.js","Routing.js","serviceWorker.js","index.js"],"names":["isMobileDevice","window","orientation","navigator","userAgent","indexOf","LoginComponent","props","login","e","preventDefault","err_message","setState","fetching","error","firebase","auth","signInWithEmailAndPassword","state","email","password","then","data","history","push","err","code","apps","length","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","className","style","display","justifyContent","paddingTop","paddingBottom","src","location","origin","height","alt","flexDirection","alignItems","onSubmit","this","width","value","onChange","evt","target","type","id","aria-describedby","placeholder","required","onClick","alignSelf","color","Component","MapContainer","displayMarkers","stores","map","store","index","key","title","name","time","position","lat","latitude","lng","longitude","onMarkerClick","marker","selectedPlace","activeMarker","showingInfoWindow","handleDateSelection","event","selectedDate","firestore","bd","Date","setHours","beginningDateObject","currentUser","replace","locations","selectedBusId","buses","distance","selectedBus","dates","i","date","setDate","getDate","bus","batch","collection","doc","where","orderBy","get","querySnapshot","forEach","element","delete","ref","commit","markers","bounds","google","maps","LatLngBounds","deleteOldDates","endDate","console","log","localDate","setUTCSeconds","CreatedAt","seconds","getHours","getMinutes","latitud","longitud","extend","LatLng","toString","signOut","res","getMonth","getFullYear","cursor","getMarkers","zoom","overFlow","marginRight","initialCenter","visible","path","strokeColor","strokeOpacity","strokeWeight","GoogleApiWrapper","language","routing","basename","exact","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3db1656a.chunk.js","sourcesContent":["export function isMobileDevice() {\r\n    return (typeof window.orientation !== \"undefined\") || (navigator.userAgent.indexOf('IEMobile') !== -1);\r\n};","import React, { Component } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport { isMobileDevice } from '../commons/device';\r\n\r\nclass LoginComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (!firebase.apps.length) {\r\n            this.app = firebase.initializeApp({\r\n                apiKey: \"AIzaSyBkRMV8HV4cazNztL2t5KAQ-QJKw1ch_Ug\",\r\n                authDomain: \"nogalesapp-1.firebaseapp.com\",\r\n                databaseURL: \"https://nogalesapp-1.firebaseio.com\",\r\n                projectId: \"nogalesapp-1\",\r\n                storageBucket: \"nogalesapp-1.appspot.com\",\r\n                messagingSenderId: \"235008508187\",\r\n                appId: \"1:235008508187:web:44833208e4bb535479d3be\"\r\n            });\r\n        }\r\n        this.state = {\r\n            fetching: false,\r\n            error: '',\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n    login = (e) => {\r\n        e.preventDefault();\r\n        let err_message = 'Realizando Login ...';\r\n        this.setState({ fetching: true, error: err_message });\r\n        firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then(\r\n            data => { this.props.history.push('/map'); },\r\n            err => {\r\n                err_message = err.code === 'auth/user-not-found' ? 'Usuario no encontrado' : 'Contrase√±a incorrecta';\r\n                this.setState({ fetching: false, error: err_message });\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"navbar navbar-dark bg-dark\" style={{ display: 'flex', justifyContent: isMobileDevice() ? '' : 'center', paddingTop: 20, paddingBottom: 20 }} >\r\n                    <img src={window.location.origin + '/admin-app/assets/Nogales.png'} height={isMobileDevice() ? 30 : '100%'} className=\"img-responsive\" alt=\"Logo\"></img>\r\n                </div>\r\n                <div className=\"mt-3 pt-3\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\r\n                    <b className=\"mb-4\">Para ingresar al sistema, inicie sesi√≥n.</b>\r\n                    <hr></hr>\r\n                    <form onSubmit={this.login} style={{ width: '50%', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <div className=\"form-group\" style={{ width: '100%' }} >\r\n                            <input value={this.state.email} onChange={evt => this.setState({ email: evt.target.value })} type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Ingrese correo electr√≥nico\" required></input>\r\n                        </div>\r\n                        <div className=\"form-group\" style={{ width: '100%' }}>\r\n                            <input value={this.state.password} onChange={evt => this.setState({ password: evt.target.value })} type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Contrase√±a\" required></input>\r\n                        </div>\r\n                        <button onClick={this.login} type=\"submit\" className=\"btn btn-secondary btn-lg btn-block\">Ingresar</button>\r\n                        <p className='mt-3' style={{ alignSelf: 'flex-end', color: this.state.fetching ? 'black' : 'red' }} >{this.state.error}</p>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { LoginComponent };\r\n","import './App.css';\r\nimport React, { Component } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport { Map, GoogleApiWrapper, Marker, InfoWindow, Polyline } from 'google-maps-react';\r\nimport { isMobileDevice } from './commons/device';\r\n\r\n\r\nexport class MapContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.firestore = null;\r\n    var bd = new Date();\r\n    bd.setHours(0, 0, 0);\r\n    this.beginningDateObject = bd;\r\n    try {\r\n      let current = firebase.auth().currentUser;\r\n      if (!current) {\r\n        this.props.replace('/', '');\r\n      }\r\n      this.firestore = firebase.firestore();\r\n    } catch (error) {\r\n      this.props.history.replace('/', '');\r\n    }\r\n    this.state = {\r\n      stores: [],\r\n      locations: [],\r\n      selectedBusId: -1,\r\n      buses: [\r\n        { id: 'Cp3arit19GVGsKMVhxew', name: 'Bus 1' }, {\r\n          id: 'PcSUAY7w4p3nXfP9MLyf', name: 'Bus 2'\r\n        }, {\r\n          id: 'ql9zKGWuOZtCRJncfaIL', name: 'Bus 3'\r\n        }, {\r\n          id: 'test', name: 'TEST'\r\n        }\r\n      ],\r\n      selectedPlace: '',\r\n      activeMarker: null,\r\n      showingInfoWindow: false,\r\n      distance: '--',\r\n      selectedBus: null,\r\n      dates: [],\r\n      selectedDate: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    var dates = [];\r\n\r\n    for (var i = 0; i < 5; i++) {\r\n      var date = new Date();\r\n      date.setDate(this.beginningDateObject.getDate() - i);\r\n      date.setHours(0,0,1);\r\n      dates.push(date);\r\n    }\r\n    this.setState({dates});\r\n  }\r\n\r\n  displayMarkers = () => {\r\n    return this.state.stores.map((store, index) => {\r\n      return <Marker key={index} id={index} title='Hi' name={store.time} position={{\r\n        lat: store.latitude,\r\n        lng: store.longitude\r\n      }}\r\n        onClick={this.onMarkerClick}  >\r\n      </Marker>\r\n    })\r\n  }\r\n\r\n  deleteOldDates(bus) {\r\n    let batch = this.firestore.batch();\r\n    this.firestore.collection('server').doc(bus.id).collection('tracking').where('CreatedAt', '<=', this.state.dates[4]).orderBy('CreatedAt').get().then(\r\n      querySnapshot => {\r\n        querySnapshot.forEach(\r\n          element => {\r\n            batch.delete(element.ref);\r\n          }\r\n        );\r\n        batch.commit().then(data => { });\r\n      });\r\n  }\r\n\r\n  getMarkers(bus) {\r\n    this.setState({ selectedBusId: bus.id });\r\n    let markers = [];\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    let locations = [];\r\n    this.deleteOldDates(bus);\r\n    let distance = 0.0;\r\n    var endDate = new Date();\r\n    endDate.setDate(this.state.dates[this.state.selectedDate].getDate());\r\n    endDate.setHours(23,59,59,999); \r\n    this.firestore.collection('server').doc(bus.id).collection('tracking').where('CreatedAt', '>', this.state.dates[this.state.selectedDate]).where('CreatedAt', '<', endDate).orderBy('CreatedAt').get().then(\r\n      querySnapshot => {\r\n        querySnapshot.forEach(\r\n          element => {\r\n            distance += .025;\r\n            let marker = element.data();\r\n            console.log(marker);\r\n            let localDate = new Date(0); // The 0 there is the key, which sets the date to the epoch\r\n            localDate.setUTCSeconds(marker.CreatedAt.seconds);\r\n            let time = `${localDate.getHours()}:${localDate.getMinutes()}`\r\n            markers.push({ latitude: marker.latitud, longitude: marker.longitud, time });\r\n            bounds.extend(new window.google.maps.LatLng(\r\n              marker.latitud,\r\n              marker.longitud\r\n            ));\r\n            locations.push({ lat: marker.latitud, lng: marker.longitud });\r\n          }\r\n        );\r\n        this.setState({ stores: markers, locations: locations, distance: distance.toString() }, () => {\r\n\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  onMarkerClick = (props, marker, e) =>\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true\r\n    });\r\n\r\n    handleDateSelection = (event) =>\r\n    this.setState({selectedDate: event.target.value});\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"navbar navbar-dark bg-dark\" style={{ display: 'flex', paddingTop: 20, alignItems: 'center', paddingBottom: 20 }} >\r\n          <img src={'/admin-app/assets/Nogales.png'} height={isMobileDevice() ? 30 : '100%'} alt=\"Logo\"></img>\r\n          <div onClick={() => {\r\n            firebase.auth().signOut().then(\r\n              () => {\r\n                this.props.history.replace('/', '');\r\n              }\r\n            )\r\n          }} className=\"btn btn-outline-success my-2 my-sm-0\">Salir</div>\r\n        </div>\r\n\r\n        <div className=\"container mt-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3\">\r\n              <div className=\"card p-3\">\r\n                <h4 className=\"mb-3\">Camiones de basura</h4>\r\n                <br></br>\r\n                <select className=\"form-group\" value={this.state.selectedDate} onChange={this.handleDateSelection}>\r\n                  { this.state.dates ?  this.state.dates.map( (res, index) => <option value={index}>\r\n                    {`${res.getDate()}-${res.getMonth()+1}-${res.getFullYear()}`}</option>):null}\r\n                </select>\r\n\r\n                <br></br>\r\n                <h2>Reporte del d√≠a</h2>\r\n                <div className=\"list-group\">\r\n                  {this.state.buses.map(bus => <div className={bus.id === this.state.selectedBusId ? 'list-group-item active' : 'list-group-item'} style={{ cursor: \"pointer\" }} onClick={() => this.getMarkers(bus)} >{bus.name}</div>)}\r\n                </div>\r\n\r\n                <div className=\"mt-3 p-3 card\">\r\n                  <strong className=\"text-center\">Distancia recorrida</strong>\r\n                  <strong className=\"mt-3 text-center\">{this.state.distance} KM</strong>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-9\">\r\n\r\n              <Map\r\n                google={this.props.google}\r\n                zoom={14}\r\n                style={{\r\n                  width: '100%',\r\n                  height: 500,\r\n                  overFlow: 'hidden',\r\n                  marginRight: 0\r\n                }}\r\n                ref={ref => this.map = ref}\r\n                initialCenter={{ lat: 18.8157483, lng: -97.1640488 }}\r\n              >\r\n                {this.displayMarkers()}\r\n                <InfoWindow\r\n                  marker={this.state.activeMarker}\r\n                  visible={this.state.showingInfoWindow}>\r\n                  <div>\r\n                    <p>{this.state.selectedPlace.name}</p>\r\n                  </div>\r\n                </InfoWindow>\r\n                {this.state.locations ? <Polyline\r\n                  path={this.state.locations}\r\n                  strokeColor=\"#0000FF\"\r\n                  strokeOpacity={0.8}\r\n                  strokeWeight={2} /> : null}\r\n              </Map>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMapContainer = GoogleApiWrapper({\r\n  apiKey: 'AIzaSyCls2n588WAf6AHLWYU69MKcPWKYrMfJcI',\r\n  language: \"ES\"\r\n})(MapContainer);\r\n","import React from \"react\";\r\nimport { Route, Switch ,HashRouter as Router } from 'react-router-dom'\r\nimport {LoginComponent} from './components';\r\nimport { MapContainer } from './App';\r\n\r\nexport const routing = (\r\n    <Router basename='/'>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={LoginComponent} />\r\n            <Route path=\"/map\" component={MapContainer} />\r\n        </Switch>\r\n    </Router>\r\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { routing } from \"./Routing\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}